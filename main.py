# main.py

from models     import Drone
from simulator  import AirspaceSimulator


def create_sample_drones() -> list[Drone]:
    """
    Builds six sample drones with waypoints and mission windows.
    """
    drones: list[Drone] = []

    # test case- 1  with no conflcit
    # specs = [
    #     ("Drone1",  0, 50,   [(0,0,0),(20,20,20),(40,40,40),(60,60,60),(80,80,80),(100,100,100)]),
    #     ("Drone2",  0, 50,   [(0,100,40),(20,100,40),(40,100,40),(60,100,40),(80,100,40),(100,100,40)]),
    #     ("Drone3",  50,80,   [(0,0,60),(25,25,60),(50,50,60),(75,75,60),(100,100,60)]),
    #     ("Drone4",  20,40,   [(0,50,10),(25,75,20),(50,50,30),(75,80,40),(100,90,50)]),
    #     ("Drone5",  0, 30,   [(100,0,80),(100,25,80),(100,50,80),(100,75,80),(100,100,80)]),
    #     ("Drone6",  60,90,   [(0,100,100),(25,75,90),(50,50,80),(75,25,90),(100,0,100)]),
    # ]

    #test case-2 with 1 conflcit
    # specs = [
    # ("Drone1", 0, 50, [(0, 0, 20), (20, 20, 30), (40, 40, 40), (60, 60, 50), (80, 80, 60), (100, 100, 70)]),
    # ("Drone2", 0, 50, [(100, 0, 70), (80, 20, 60), (60, 40, 50), (40, 60, 40), (20, 80, 30), (0, 100, 20)]),
    # ("Drone3", 10, 60, [(0, 0, 100), (25, 25, 100), (50, 50, 100), (75, 75, 100), (100, 100, 100)]),
    # ("Drone4", 5, 35, [(0, 60, 10), (25, 60, 10), (50, 60, 10), (75, 60, 10), (100, 60, 10)]),
    # ("Drone5", 20, 70, [(50, 10, 0), (50, 10, 20), (50, 10, 40), (50, 10, 60)]),
    # ("Drone6", 30, 80, [(0, 100, 30), (25, 75, 40), (50, 50, 50), (75, 25, 40), (100, 0, 30)]),
    # ]

    #test case-3 with 2 conflcits
    

    specs = [
        ("Drone1", 0, 50, [(0,0,0),(25,25,25),(50,50,50),(75,75,75),(100,100,100)]),
        ("Drone2", 0, 50, [(0,10,10),(25,25,25),(50,40,40),(75,60,60),(100,80,80)]), 
        ("Drone3", 0, 50, [(0,120,120),(25,115,115),(50,110,110),(75,105,105),(100,100,100)]),
        ("Drone4", 0, 50, [(0,200,10),(25,200,30),(50,200,50),(75,200,70),(100,200,90)]), 
        ("Drone5", 0, 50, [(0,50,200),(25,60,200),(50,70,200),(75,80,200),(100,90,200)])]


    #test case -4 one conflict with intersection of drones and longer buffer interference
    #   specs = [
    # ("Drone1",  0, 50,   [(0, 0, 0), (25, 25, 25), (50, 50, 50), (75, 75, 75), (100, 100, 100)]),
    # ("Drone2",  0, 50,   [(0, 10, 10), (25, 25, 25), (50, 40, 40), (75, 60, 60), (100, 80, 80)]),
    # ("Drone5",  20, 70,  [(0, 120, 120), (25, 110, 110), (50, 100, 100), (75, 100, 100), (100, 100, 100)]),
    # ("Drone3",  10, 60,  [(0, 0, 100), (25, 0, 90), (50, 0, 80), (75, 0, 70), (100, 0, 60)]),
    # ("Drone4",  10, 60,  [(0, 200, 0), (25, 200, 20), (50, 200, 40), (75, 200, 60), (100, 200, 80)]),
    # ("Drone6",  30, 70,  [(0, 50, 200), (25, 60, 200), (50, 70, 200), (75, 80, 200), (100, 90, 200)])
    #  ]

    # test case-3 multiple conflcits: with same path and intersection at points line coflcit
    # specs = [
    # ("Drone1", 0, 50, [(0, 0, 20), (20, 20, 30), (40, 40, 40), (60, 60, 50), (80, 80, 60), (100, 0, 70)]),
    # ("Drone2", 0, 50, [(0, 0, 20), (20, 20, 30), (40, 40, 40), (60, 40, 50), (80, 20, 60), (100, 0, 70)]),
    # ("Drone3", 50, 100, [(0, 0, 100), (25, 25, 100), (50, 50, 100), (75, 75, 100), (100, 100, 100)]),
    # ("Drone4", 10, 40, [(0, 60, 10), (25, 60, 10), (50, 60, 10), (75, 60, 10), (100, 60, 10)]),
    # ("Drone5", 45, 95, [(100, 0, 70), (100, 20, 60), (100, 40, 50), (100, 60, 40), (100, 80, 30)]),
    # ("Drone6", 70, 100, [(0, 100, 100), (25, 75, 90), (50, 50, 80), (75, 25, 90), (100, 0, 100)]),
    #  ]


    for mid, start, end, wps in specs:
        d = Drone(mid)
        d.set_mission_window(start, end)
        for x,y,z in wps:
            d.add_waypoint(x, y, z)
        drones.append(d)

    return drones


def main() -> None:
    """
    Entry point: create drones, instantiate simulator, and run both animations.
    """
    drones = create_sample_drones()
    sim = AirspaceSimulator(drones, safety_buffer=15.0, dt=0.2)
    sim.run_both(
        primary_id     = "Drone1",
        save_conflict  = "initial_conflict.gif",
        save_resolved  = "conflict_resolved.gif"
    )


if __name__ == "__main__":
    main()
